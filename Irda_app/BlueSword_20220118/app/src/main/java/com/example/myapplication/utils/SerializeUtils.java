package com.example.myapplication.utils;import java.io.ByteArrayInputStream;import java.io.ByteArrayOutputStream;import java.io.IOException;import java.io.ObjectInputStream;import java.io.ObjectOutputStream;import java.io.ObjectStreamClass;public class SerializeUtils {    /**     * 序列化     * @param obj     * @return     */    public static byte[] serialize(Object obj) {        byte[] result = null;        ByteArrayOutputStream baos = new ByteArrayOutputStream();        ObjectOutputStream oos = null;        try {            oos = new ObjectOutputStream(baos);            oos.writeObject(obj);            result = baos.toByteArray();        } catch (IOException e) {            e.printStackTrace();        } finally {            if (oos != null) {                try {                    oos.close();                } catch (IOException e) {                    e.printStackTrace();                }            }        }        return result;    }    /**     * 反序列化     * @param <T>     * @param byteArray     * @param t     * @return     */    @SuppressWarnings("unchecked")    public static final <T> T deserialize(byte[] byteArray, final Class<T> t) {        if (byteArray == null)            return null;        T result = null;        ByteArrayInputStream bais = new ByteArrayInputStream(byteArray);        ObjectInputStream ois = null;        try {            ois = new ObjectInputStream(bais) {                @Override                protected Class<?> resolveClass(ObjectStreamClass desc) throws IOException, ClassNotFoundException {                    return t != null && desc.getName().equals(t.getName()) ? t : super.resolveClass(desc);                }            };            result = (T) ois.readObject();        } catch (IOException e) {            e.printStackTrace();        } catch (ClassNotFoundException e) {            e.printStackTrace();        } finally {            if (ois != null) {                try {                    ois.close();                } catch (IOException e) {                    e.printStackTrace();                }            }        }        return result;    }}